name: "Android Release"

on:
  push:
    branches:
      - master
jobs:
  build-android-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install specific NDK version
        run: sdkmanager "ndk;26.1.10909125"

      - name: Install Rust stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android

      - name: Install frontend dependencies
        run: npm ci

      - name: Extract app version
        id: app_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Decode Android keystore
        id: decode_keystore
        # Decode keystore directly to the path Gradle expects
        run: |
          mkdir -p src-tauri/gen/android
          echo "${{ secrets.ANDROID_RELEASE_KEYSTORE }}" | base64 --decode > src-tauri/gen/android/android-release.jks
          echo "Decoded keystore to src-tauri/gen/android/android-release.jks"
        shell: bash

      - name: Create keystore.properties for Gradle
        run: |
          echo "Creating keystore.properties for Gradle build..."
          # Use a path relative to the build.gradle.kts file location (which is inside src-tauri/gen/android/)
          cat <<EOF > src-tauri/gen/android/keystore.properties
          storeFile=android-release.jks
          password=${{ secrets.ANDROID_RELEASE_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_RELEASE_KEY }}
          keyPassword=${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }}
          EOF
          
          echo "keystore.properties created with correct path"
        shell: bash

      - name: Build Android App
        run: npm run tauri android build
        env:
          NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/26.1.10909125
          CI: true
          RUST_LOG: debug

      - name: List build artifacts
        if: always()
        run: |
          echo "--- Checking for built APK/AAB files ---"
          find src-tauri -name "*.apk" -o -name "*.aab"

      - name: Rename APK artifact
        if: success()
        run: |
          mkdir -p release-artifacts
          cp src-tauri/target/release/android-artifacts/app-universal-release-signed.apk release-artifacts/tsuuchinoko-v${{ steps.app_version.outputs.version }}-universal.apk

      - name: Rename AAB artifact
        if: success()
        run: |
          cp src-tauri/target/release/android-artifacts/app-universal-release.aab release-artifacts/tsuuchinoko-v${{ steps.app_version.outputs.version }}-universal.aab

      - name: Create GitHub Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: android-v${{ steps.app_version.outputs.version }}
          name: Tsuuchinoko Android v${{ steps.app_version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            release-artifacts/tsuuchinoko-v${{ steps.app_version.outputs.version }}-universal.apk
            release-artifacts/tsuuchinoko-v${{ steps.app_version.outputs.version }}-universal.aab
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}