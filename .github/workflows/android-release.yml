name: 'Android Release'

on:
  push:
    branches:
      - master

jobs:
  build-android:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install NDK
        run: sdkmanager "ndk;25.2.9519653"

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android

      - name: Install dependencies
        run: npm ci

      - name: Extract app version
        id: app_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Build Android app in release mode
        run: |
          npm run tauri android build -v
          ls -l src-tauri/gen/android/app/build/outputs/apk/universal/release/
          ls -l src-tauri/gen/android/app/build/outputs/bundle/universalRelease/
        env:
          NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/25.2.9519653

      - name: Check for build outputs
        run: |
          if [ ! -f src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk ]; then
            echo "Error: app-universal-release-unsigned.apk not found!"
            exit 1
          fi
          if [ ! -f src-tauri/gen/android/app/build/outputs/bundle/universalRelease/app-universal-release.aab ]; then
            echo "Error: app-universal-release.aab not found!"
            exit 1
          fi

      - name: Extract Android signing keystore
        run: |
          echo "${{ secrets.ANDROID_RELEASE_KEYSTORE }}" | base64 -d > android-release.jks

      - name: Sign APK
        run: |
          ${{ env.ANDROID_HOME }}/build-tools/34.0.0/apksigner sign \
            --ks android-release.jks \
            --ks-key-alias ${{ secrets.ANDROID_RELEASE_KEY }} \
            --ks-pass pass:${{ secrets.ANDROID_RELEASE_PASSWORD }} \
            --key-pass pass:${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }} \
            --out src-tauri/gen/android/app/build/outputs/apk/universal/release/tsuuchinoko-${{ steps.app_version.outputs.version }}-signed.apk \
            src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk

      - name: Sign and rename AAB
        run: |
          ${{ env.ANDROID_HOME }}/build-tools/34.0.0/jarsigner \
            -keystore android-release.jks \
            -storepass ${{ secrets.ANDROID_RELEASE_PASSWORD }} \
            -keypass ${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }} \
            src-tauri/gen/android/app/build/outputs/bundle/universalRelease/app-universal-release.aab ${{ secrets.ANDROID_RELEASE_KEY }}

          mv src-tauri/gen/android/app/build/outputs/bundle/universalRelease/app-universal-release.aab \
            src-tauri/gen/android/app/build/outputs/bundle/universalRelease/tsuuchinoko-${{ steps.app_version.outputs.version }}.aab

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.app_version.outputs.version }}
          name: Tsuuchinoko v${{ steps.app_version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            src-tauri/gen/android/app/build/outputs/apk/universal/release/tsuuchinoko-${{ steps.app_version.outputs.version }}-signed.apk
            src-tauri/gen/android/app/build/outputs/bundle/universalRelease/tsuuchinoko-${{ steps.app_version.outputs.version }}.aab
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}